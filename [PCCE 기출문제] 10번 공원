import java.util.*;

class Solution {
    public int solution(int[] mats, String[][] park) {
        List<Integer> matList = new ArrayList<>();  // mats 리스트화
        Arrays.stream(mats).forEach(matList::add);  // 오름차순 정렬
        Collections.sort(matList);
        int answer = -1;
        
        // 공원 첫번째 칸부터 순차적으로 확인
        for(int i = 0; i < park.length; i++) {
            if(matList.isEmpty()) break;
            for(int j = 0; j < park[i].length; j++) {
                if(matList.isEmpty()) break;
                
                // 배열의 값이 -1 일 경우
                if(park[i][j].equals("-1")) {
                    while(!matList.isEmpty()) {
                        Integer mat = matList.get(0); // 오름차순 된 리스트의 첫번째 항목 get
                        boolean flag = true;
                        
                        // park[i][j]부터 매트의 길이만큼 조회
                        for(int y = i; y < Math.min(i + mat, park.length); y++) {
                            for(int x = j; x < Math.min(j + mat, park[y].length); x++) {
                                // 만약 매트 길이가 공원 밖으로 나갈 flag = false 처리 후 반복문 종료
                                if(park.length-i < mat || park[i].length - j < mat || !park[y][x].equals("-1")) {
                                    flag = false;
                                    break;
                                }
                            }
                            if(!flag) break;
                        }
                        if(!flag) {
                            break;
                        } else {
                            answer = matList.get(0);  // mats 길이 만족할 경우 조회한 mats 길이로 변경
                            matList.remove(0);  // 다른 칸에서 해당 mats 길이 조회할 필요 없으므로 remove
                        }
                    }
                }
            }
        }

        return answer;
    }
}
