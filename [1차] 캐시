import java.util.LinkedList;

class Solution {
    public int solution(int cacheSize, String[] cities) {
        int answer = 0;
        LinkedList<String> cache = new LinkedList<String>();
        int hit = 1;
        int miss = 5;
        
      	// 캐시 사이즈가 0 = 캐시에 아무것도 못 담음 => 모두 cache miss
        if (cacheSize == 0) 
            return cities.length * miss;
        
        for (String pastCity : cities) {
          	// 대소문자를 구분하지 않기 때문에 모두 소문자로 변환하여 저장
            String city = pastCity.toLowerCase();
            
            if (!cache.isEmpty() && cache.contains(city)) {
                // 가장 최근에 사용된 항목은 리스트의 맨 앞에 위치해야 하기 때문에 캐시 안에 있는 값 미리 삭제
                cache.remove(cache.indexOf(city));
                answer += hit;
            } else {
                // 이미 캐시 최대 사이즈를 도달했다면
                if (cache.size() >= cacheSize) {
                    // 맨 뒤에 있는 값 삭제
                    cache.remove(cacheSize - 1);
                }
                answer += miss;
            }
            // 가장 최근에 조회한 값 맨 앞에 위치
            cache.add(0, city);
        }
        return answer;
    }
}
